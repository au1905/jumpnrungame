//Hier können TODOs und Diskussionen eingetragen werden.
//Wenn ihr ein TODO bearbeitet oder fertig habt, am Besten kurz hier eintragen, damit nicht mehrere gleichzeitig am Gleichen programmieren.
//Wenn euch noch andere TODOs einfallen, einfach hinzufügen.


FERTIG: Die Figur und den Hintergrund anzeigen
FERTIG: Das Bild "figur.bmp" muss zugeschnitten und die Ecken müssen trasparent werden (bisher wird ein schwarzes Quadrat um die Figur gezeichnet)
     
FERTIG: Auf Tastatureingaben reagieren
FERTIG: Die Figur in TimerEvent() bewegen (an der Stelle mit dem TODO)
FERTIG: Die Kamera bewegen, wenn sich die Figur bewegt
FERTIG: Bilder für Hindernisse erstellen und Hindernisse anzeigen 
      
ANGEFANGEN: Kollisionsabfragen (siehe unten)

TODO: Die Kamera auch bewegen, wenn die Figur sich nach oben (und unten) bewegt
      Dabei muss der Boden auch nach unten bewegt werden, die Wolke in der Ecke aber wenn möglich bleiben
      Da der gesamte Hintergrund bisher nicht bewegt wird, würde der Boden an der gleichen Stelle bleiben, 
      wenn die Figur und die Kamera sich nach oben bewegen
TODO: Score zählen und Scorezähler anzeigen
TODO: 3D-Elemente einbaue
FERTIG: Die Hindernisse zufällig erscheinen lassen

Zu den Kollisionsabfragen:
Ich habe die Methoden collision und collisionQuader in Hindernisse.cpp eingefügt. Allerdings habe ich bisher keine
der beiden getestet, es sind also vermutlich noch Fehler darin.

collisionQuader überprüft, ob ein Quader mit der Figur kollidiert; als Argumente bekommt es einen Figur*, die
Variablen der unteren linken Ecke, die Breite und die Hoehe.
collision kann verwendet werden, um tatsächlich zu überprüfen, ob eine Kollision stattgefunden hat; die Version
in Hindernisse.cpp nimmt aber einfach an, dass das Hindernis ein Quader ist und ruft collisionQuader auf. In den
Klassen mit Hindernissen, die kein Quader sind, muss collision also überschrieben werden.

Bisher geht der gesamte Code übrigens noch davon aus, dass die Figur ein Rechteck (und kein Kreis) ist.

An Aurel:
Irgendwie habe ich nicht ganz verstanden, was dein Code machen soll. Ich hoffe mal, das war nicht das, was ich
programmiert habe (falls doch, tut mir Leid), aber vielleicht kannst du das ja irgendwann in meinen Code einfügen.

Ich habe das Ganze so weit fertig, dass die Figur und der Hintergrund angezeigt werden. 
Für neue Objekte:
1. Bild erstellen und mit dem Befehl
  convert bild.jpg BMP2:bild.png
  ins richtige Format bringen; in den Ordner src kopieren
2. Neue Klasse erzeugen, kopiert am Besten einfach den Code von Figur.cpp und Figur.h hinein
3. in Jumpnrungame.cpp den Code anpassen (sucht einfach mit Strg+F nach Figur, dann seht ihr, wass alles angepasst werden muss)
4. UNBEDINGT sofort committen und pushen, sobald euer Objekt angezeigt wird! Sonst kann euer Code möglicherweise nicht verwendet werden, 
  weil ihr nächstes Mal nicht da seit oder so! Außerdem gibt es weniger Merge Conflicts, wenn ihr häufiger pusht.
  
  
Zum Pushen:
Projekt speichern
git diff (Zeigt eure Änderungen an)
git add die Dateien, die ihr geändert habt (und von denen ihr die Änderungen pushen wollt)
git commit -m "Hier muss eine aussagekräftige Beschreibung eurer Änderungen hin, schaut bei Bedarf noch einmal bei der Ausgabe von git diff nach"
git pull
git push
